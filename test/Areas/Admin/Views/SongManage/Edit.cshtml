@model MusicApp.Models.Song

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Form Elements</div>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Edit", "SongManage", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <!-- Left column -->
                        <div class="col-md-6 col-lg-4">
                            <div class="form-group form-group-default">
                                @Html.LabelFor(model => model.Title)
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group form-group-default">
                                @Html.LabelFor(model => model.ArtistId)
                                @Html.EditorFor(model => model.ArtistId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ArtistId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group form-group-default">
                                @Html.LabelFor(model => model.CategoryId)
                                @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group form-group-default">
                                @Html.LabelFor(model => model.AlbumId)
                                @Html.EditorFor(model => model.AlbumId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AlbumId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <div class="d-flex">
                                    <div class="form-check">
                                        @Html.LabelFor(model => model.IsFavorite)
                                        @Html.EditorFor(model => model.IsFavorite, new { htmlAttributes = new { @class = "form-check-input" } })
                                    </div>
                                    <div class="form-check">
                                        @Html.LabelFor(model => model.IsFeatured)
                                        @Html.EditorFor(model => model.IsFeatured, new { htmlAttributes = new { @class = "form-check-input" } })
                                    </div>
                                </div>
                            </div>

                        </div>

                        <!-- Middle column -->
                        <div class="col-md-6 col-lg-4">
                            <div class="form-group">
                                @Html.Label("Upload Cover Image", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="file" name="CoverImage" class="form-control" accept="image/*" onchange="previewImage(event)" />
                                </div>
                            </div>

                            <!-- Display image preview -->
                            <div class="form-group">
                                <div class="col-md-10 col-md-offset-2">
                                    <img id="imagePreview" src="@Url.Content(Model.CoverImageUrl)" alt="Cover Image Preview" style="max-width: 200px; display:block;" />
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Audio Upload</label>
                                <input type="file" name="AudioFile" class="form-control" accept="audio/*" />
                            </div>
                        </div>

                        <!-- Right column -->
                        <div class="col-md-6 col-lg-4">
                            <div class="form-group form-group-default">
                                @Html.LabelFor(model => model.ReleaseDate)
                                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control ", type = "date" } })
                                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Hide)
                                @Html.EditorFor(model => model.Hide, new { htmlAttributes = new { @class = "form-check-input" } })
                            </div>

                            <div class="form-group form-inline">
                                @Html.LabelFor(model => model.Order, new { @class = "col-md-3 col-form-label" })
                                <div class="col-md-9 p-0">
                                    @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group form-group-default">
                                @Html.LabelFor(model => model.Meta)
                                @Html.EditorFor(model => model.Meta, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Lyrics)
                        @Html.TextAreaFor(model => model.Lyrics, new { @class = "form-control", rows = 5 })
                        @Html.ValidationMessageFor(model => model.Lyrics, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Save Changes" class="btn btn-success" />
                        <a href="@Url.Action("Index", "SongManage")" class="btn btn-danger">Cancel</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementById('imagePreview');
            output.src = reader.result;
            output.style.display = 'block';
        };
        reader.readAsDataURL(event.target.files[0]);
    }
</script>
